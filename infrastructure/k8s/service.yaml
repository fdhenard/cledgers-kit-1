apiVersion: v1
kind: Service
metadata:
  name: cledgers-service
  namespace: default
  uid: 2d0dab67-cf25-4312-8f52-6717b7e52c2a
  resourceVersion: '245433'
  creationTimestamp: '2023-07-07T15:28:39Z'
  labels:
    app: cledgers
  annotations:
    kubernetes.digitalocean.com/load-balancer-id: 19e36ed7-4577-4ec2-ae2a-5c67344f3890
  finalizers:
    - service.kubernetes.io/load-balancer-cleanup
  managedFields:
    - manager: digitalocean-cloud-controller-manager
      operation: Update
      apiVersion: v1
      time: '2023-07-07T15:28:39Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:finalizers:
            .: {}
            v:"service.kubernetes.io/load-balancer-cleanup": {}
      subresource: status
    - manager: kubectl-expose
      operation: Update
      apiVersion: v1
      time: '2023-07-07T15:28:39Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
        f:spec:
          f:allocateLoadBalancerNodePorts: {}
          f:externalTrafficPolicy: {}
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":80,"protocol":"TCP"}:
              .: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
    - manager: digitalocean-cloud-controller-manager
      operation: Update
      apiVersion: v1
      time: '2023-07-07T15:28:40Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.digitalocean.com/load-balancer-id: {}
  selfLink: /api/v1/namespaces/default/services/cledgers-service
status:
  loadBalancer: {}
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
      nodePort: 32515
  selector:
    app: cledgers
  clusterIP: 10.245.53.186
  clusterIPs:
    - 10.245.53.186
  type: LoadBalancer
  sessionAffinity: None
  externalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  allocateLoadBalancerNodePorts: true
  internalTrafficPolicy: Cluster

